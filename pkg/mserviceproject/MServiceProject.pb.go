// Copyright 2019-2022 Demian Harvill
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: MServiceProject.proto

package mserviceproject

import (
	dml "github.com/gaterace/dml-go/pkg/dml"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MService project entity
type Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// project identifier
	ProjectId int64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,3,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// mservice account id
	MserviceId int64 `protobuf:"varint,7,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// entity name
	Name string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	// entity description
	Description string `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	// status identifier
	StatusId int32 `protobuf:"varint,10,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
	// status name
	StatusName string `protobuf:"bytes,11,opt,name=status_name,json=statusName,proto3" json:"status_name,omitempty"`
	// project start date
	StartDate *dml.DateTime `protobuf:"bytes,12,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	// project end date
	EndDate *dml.DateTime `protobuf:"bytes,13,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *Project) Reset() {
	*x = Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{0}
}

func (x *Project) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *Project) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Project) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *Project) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *Project) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Project) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Project) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Project) GetStatusId() int32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *Project) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

func (x *Project) GetStartDate() *dml.DateTime {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Project) GetEndDate() *dml.DateTime {
	if x != nil {
		return x.EndDate
	}
	return nil
}

// MService project entity with associations
type ProjectWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// project identifier
	ProjectId int64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,3,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// mservice account id
	MserviceId int64 `protobuf:"varint,7,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// entity name
	Name string `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	// entity description
	Description string `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	// status identifier
	StatusId int32 `protobuf:"varint,10,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
	// status name
	StatusName string `protobuf:"bytes,11,opt,name=status_name,json=statusName,proto3" json:"status_name,omitempty"`
	// project start date
	StartDate *dml.DateTime `protobuf:"bytes,12,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	// project end date
	EndDate *dml.DateTime `protobuf:"bytes,13,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	// list of project team member objects
	TeamMembers []*TeamMember `protobuf:"bytes,14,rep,name=team_members,json=teamMembers,proto3" json:"team_members,omitempty"`
	// list of child project task objects with associations
	ChildTaskWrappers []*TaskWrapper `protobuf:"bytes,15,rep,name=child_task_wrappers,json=childTaskWrappers,proto3" json:"child_task_wrappers,omitempty"`
}

func (x *ProjectWrapper) Reset() {
	*x = ProjectWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectWrapper) ProtoMessage() {}

func (x *ProjectWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectWrapper.ProtoReflect.Descriptor instead.
func (*ProjectWrapper) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{1}
}

func (x *ProjectWrapper) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *ProjectWrapper) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *ProjectWrapper) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *ProjectWrapper) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *ProjectWrapper) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *ProjectWrapper) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ProjectWrapper) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *ProjectWrapper) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectWrapper) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProjectWrapper) GetStatusId() int32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *ProjectWrapper) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

func (x *ProjectWrapper) GetStartDate() *dml.DateTime {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *ProjectWrapper) GetEndDate() *dml.DateTime {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *ProjectWrapper) GetTeamMembers() []*TeamMember {
	if x != nil {
		return x.TeamMembers
	}
	return nil
}

func (x *ProjectWrapper) GetChildTaskWrappers() []*TaskWrapper {
	if x != nil {
		return x.ChildTaskWrappers
	}
	return nil
}

// MService project status type
type StatusType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// status identifier
	StatusId int32 `protobuf:"varint,1,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,3,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// mservice account id
	MserviceId int64 `protobuf:"varint,7,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// status name
	StatusName string `protobuf:"bytes,8,opt,name=status_name,json=statusName,proto3" json:"status_name,omitempty"`
	// entity description
	Description string `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *StatusType) Reset() {
	*x = StatusType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusType) ProtoMessage() {}

func (x *StatusType) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusType.ProtoReflect.Descriptor instead.
func (*StatusType) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{2}
}

func (x *StatusType) GetStatusId() int32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *StatusType) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *StatusType) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *StatusType) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *StatusType) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *StatusType) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *StatusType) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *StatusType) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

func (x *StatusType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// MService project task
type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// task identifier
	TaskId int64 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,3,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// mservice account id
	MserviceId int64 `protobuf:"varint,7,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// project identifier
	ProjectId int64 `protobuf:"varint,8,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// entity name
	Name string `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	// entity description
	Description string `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	// status identifier
	StatusId int32 `protobuf:"varint,11,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
	// status name
	StatusName string `protobuf:"bytes,12,opt,name=status_name,json=statusName,proto3" json:"status_name,omitempty"`
	// project start date
	StartDate *dml.DateTime `protobuf:"bytes,13,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	// project end date
	EndDate *dml.DateTime `protobuf:"bytes,14,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	// task priority, 0 low to 9 high
	Priority int32 `protobuf:"varint,15,opt,name=priority,proto3" json:"priority,omitempty"`
	// parent task id
	ParentId int64 `protobuf:"varint,16,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// sibling position
	Position int32 `protobuf:"varint,17,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{3}
}

func (x *Task) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *Task) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *Task) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *Task) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *Task) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Task) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Task) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *Task) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *Task) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Task) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Task) GetStatusId() int32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *Task) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

func (x *Task) GetStartDate() *dml.DateTime {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Task) GetEndDate() *dml.DateTime {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *Task) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *Task) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *Task) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

// MService project task with associations
type TaskWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// task identifier
	TaskId int64 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,3,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// mservice account id
	MserviceId int64 `protobuf:"varint,7,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// project identifier
	ProjectId int64 `protobuf:"varint,8,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// entity name
	Name string `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	// entity description
	Description string `protobuf:"bytes,10,opt,name=description,proto3" json:"description,omitempty"`
	// status identifier
	StatusId int32 `protobuf:"varint,11,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
	// status name
	StatusName string `protobuf:"bytes,12,opt,name=status_name,json=statusName,proto3" json:"status_name,omitempty"`
	// project start date
	StartDate *dml.DateTime `protobuf:"bytes,13,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	// project end date
	EndDate *dml.DateTime `protobuf:"bytes,14,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	// task priority, 0 low to 9 high
	Priority int32 `protobuf:"varint,15,opt,name=priority,proto3" json:"priority,omitempty"`
	// parent task id
	ParentId int64 `protobuf:"varint,16,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// sibling position
	Position int32 `protobuf:"varint,17,opt,name=position,proto3" json:"position,omitempty"`
	// list of project team member objects
	TeamMembers []*TeamMember `protobuf:"bytes,18,rep,name=team_members,json=teamMembers,proto3" json:"team_members,omitempty"`
	// list of child project task objects with associations
	ChildTaskWrappers []*TaskWrapper `protobuf:"bytes,19,rep,name=child_task_wrappers,json=childTaskWrappers,proto3" json:"child_task_wrappers,omitempty"`
}

func (x *TaskWrapper) Reset() {
	*x = TaskWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskWrapper) ProtoMessage() {}

func (x *TaskWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskWrapper.ProtoReflect.Descriptor instead.
func (*TaskWrapper) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{4}
}

func (x *TaskWrapper) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *TaskWrapper) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *TaskWrapper) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *TaskWrapper) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *TaskWrapper) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *TaskWrapper) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *TaskWrapper) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *TaskWrapper) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *TaskWrapper) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TaskWrapper) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TaskWrapper) GetStatusId() int32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *TaskWrapper) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

func (x *TaskWrapper) GetStartDate() *dml.DateTime {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *TaskWrapper) GetEndDate() *dml.DateTime {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *TaskWrapper) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *TaskWrapper) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *TaskWrapper) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *TaskWrapper) GetTeamMembers() []*TeamMember {
	if x != nil {
		return x.TeamMembers
	}
	return nil
}

func (x *TaskWrapper) GetChildTaskWrappers() []*TaskWrapper {
	if x != nil {
		return x.ChildTaskWrappers
	}
	return nil
}

// MService project team member
type TeamMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// team member id
	MemberId int64 `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,3,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// mservice account id
	MserviceId int64 `protobuf:"varint,7,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// project identifier
	ProjectId int64 `protobuf:"varint,8,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// entity name
	Name string `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	// role id of this team member
	ProjectRoleId int32 `protobuf:"varint,10,opt,name=project_role_id,json=projectRoleId,proto3" json:"project_role_id,omitempty"`
	// role name of this team member
	RoleName string `protobuf:"bytes,11,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	// email address of team member
	Email string `protobuf:"bytes,12,opt,name=email,proto3" json:"email,omitempty"`
	// hours allocated to task by team member
	TaskHours *dml.Decimal `protobuf:"bytes,13,opt,name=task_hours,json=taskHours,proto3" json:"task_hours,omitempty"`
}

func (x *TeamMember) Reset() {
	*x = TeamMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeamMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeamMember) ProtoMessage() {}

func (x *TeamMember) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeamMember.ProtoReflect.Descriptor instead.
func (*TeamMember) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{5}
}

func (x *TeamMember) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *TeamMember) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *TeamMember) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *TeamMember) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *TeamMember) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *TeamMember) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *TeamMember) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *TeamMember) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *TeamMember) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeamMember) GetProjectRoleId() int32 {
	if x != nil {
		return x.ProjectRoleId
	}
	return 0
}

func (x *TeamMember) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *TeamMember) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *TeamMember) GetTaskHours() *dml.Decimal {
	if x != nil {
		return x.TaskHours
	}
	return nil
}

// MService project role type
type ProjectRoleType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// role id of this team member
	ProjectRoleId int32 `protobuf:"varint,1,opt,name=project_role_id,json=projectRoleId,proto3" json:"project_role_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,3,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,5,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,6,opt,name=version,proto3" json:"version,omitempty"`
	// mservice account id
	MserviceId int64 `protobuf:"varint,7,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// role name of this team member
	RoleName string `protobuf:"bytes,8,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	// entity description
	Description string `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ProjectRoleType) Reset() {
	*x = ProjectRoleType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectRoleType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectRoleType) ProtoMessage() {}

func (x *ProjectRoleType) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectRoleType.ProtoReflect.Descriptor instead.
func (*ProjectRoleType) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{6}
}

func (x *ProjectRoleType) GetProjectRoleId() int32 {
	if x != nil {
		return x.ProjectRoleId
	}
	return 0
}

func (x *ProjectRoleType) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *ProjectRoleType) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *ProjectRoleType) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *ProjectRoleType) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *ProjectRoleType) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ProjectRoleType) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *ProjectRoleType) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *ProjectRoleType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// MService map team member to task
type TaskToMember struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// project identifier
	ProjectId int64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// task identifier
	TaskId int64 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// team member id
	MemberId int64 `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	// creation date
	Created *dml.DateTime `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	// modification date
	Modified *dml.DateTime `protobuf:"bytes,5,opt,name=modified,proto3" json:"modified,omitempty"`
	// deletion date
	Deleted *dml.DateTime `protobuf:"bytes,6,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// has record been deleted?
	IsDeleted bool `protobuf:"varint,7,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	// mservice account id
	MserviceId int64 `protobuf:"varint,8,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// hours allocated to task by team member
	TaskHours *dml.Decimal `protobuf:"bytes,9,opt,name=task_hours,json=taskHours,proto3" json:"task_hours,omitempty"`
}

func (x *TaskToMember) Reset() {
	*x = TaskToMember{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskToMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskToMember) ProtoMessage() {}

func (x *TaskToMember) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskToMember.ProtoReflect.Descriptor instead.
func (*TaskToMember) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{7}
}

func (x *TaskToMember) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *TaskToMember) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *TaskToMember) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *TaskToMember) GetCreated() *dml.DateTime {
	if x != nil {
		return x.Created
	}
	return nil
}

func (x *TaskToMember) GetModified() *dml.DateTime {
	if x != nil {
		return x.Modified
	}
	return nil
}

func (x *TaskToMember) GetDeleted() *dml.DateTime {
	if x != nil {
		return x.Deleted
	}
	return nil
}

func (x *TaskToMember) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *TaskToMember) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *TaskToMember) GetTaskHours() *dml.Decimal {
	if x != nil {
		return x.TaskHours
	}
	return nil
}

// request parameters for method create_project
type CreateProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// entity name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// entity description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// status identifier
	StatusId int32 `protobuf:"varint,4,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
	// project start date
	StartDate *dml.DateTime `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	// project end date
	EndDate *dml.DateTime `protobuf:"bytes,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *CreateProjectRequest) Reset() {
	*x = CreateProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectRequest) ProtoMessage() {}

func (x *CreateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectRequest.ProtoReflect.Descriptor instead.
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{8}
}

func (x *CreateProjectRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *CreateProjectRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProjectRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateProjectRequest) GetStatusId() int32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *CreateProjectRequest) GetStartDate() *dml.DateTime {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *CreateProjectRequest) GetEndDate() *dml.DateTime {
	if x != nil {
		return x.EndDate
	}
	return nil
}

// response parameters for method create_project
type CreateProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// project identifier
	ProjectId int64 `protobuf:"varint,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *CreateProjectResponse) Reset() {
	*x = CreateProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectResponse) ProtoMessage() {}

func (x *CreateProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectResponse.ProtoReflect.Descriptor instead.
func (*CreateProjectResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{9}
}

func (x *CreateProjectResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CreateProjectResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateProjectResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CreateProjectResponse) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

// request parameters for method update_project
type UpdateProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// project identifier
	ProjectId int64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// mservice account id
	MserviceId int64 `protobuf:"varint,2,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// entity name
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// entity description
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// status identifier
	StatusId int32 `protobuf:"varint,6,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
	// project start date
	StartDate *dml.DateTime `protobuf:"bytes,7,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	// project end date
	EndDate *dml.DateTime `protobuf:"bytes,8,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *UpdateProjectRequest) Reset() {
	*x = UpdateProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectRequest) ProtoMessage() {}

func (x *UpdateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectRequest.ProtoReflect.Descriptor instead.
func (*UpdateProjectRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateProjectRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *UpdateProjectRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *UpdateProjectRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateProjectRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateProjectRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateProjectRequest) GetStatusId() int32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *UpdateProjectRequest) GetStartDate() *dml.DateTime {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *UpdateProjectRequest) GetEndDate() *dml.DateTime {
	if x != nil {
		return x.EndDate
	}
	return nil
}

// response parameters for method update_project
type UpdateProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateProjectResponse) Reset() {
	*x = UpdateProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectResponse) ProtoMessage() {}

func (x *UpdateProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectResponse.ProtoReflect.Descriptor instead.
func (*UpdateProjectResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateProjectResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpdateProjectResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UpdateProjectResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method delete_project
type DeleteProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// project identifier
	ProjectId int64 `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// mservice account id
	MserviceId int64 `protobuf:"varint,2,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteProjectRequest) Reset() {
	*x = DeleteProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectRequest) ProtoMessage() {}

func (x *DeleteProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectRequest.ProtoReflect.Descriptor instead.
func (*DeleteProjectRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteProjectRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *DeleteProjectRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *DeleteProjectRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// response parameters for method delete_project
type DeleteProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteProjectResponse) Reset() {
	*x = DeleteProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectResponse) ProtoMessage() {}

func (x *DeleteProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectResponse.ProtoReflect.Descriptor instead.
func (*DeleteProjectResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteProjectResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *DeleteProjectResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DeleteProjectResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method get_project_names
type GetProjectNamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
}

func (x *GetProjectNamesRequest) Reset() {
	*x = GetProjectNamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectNamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectNamesRequest) ProtoMessage() {}

func (x *GetProjectNamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectNamesRequest.ProtoReflect.Descriptor instead.
func (*GetProjectNamesRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{14}
}

func (x *GetProjectNamesRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

// response parameters for method get_project_names
type GetProjectNamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// list of entity names
	Names []string `protobuf:"bytes,3,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *GetProjectNamesResponse) Reset() {
	*x = GetProjectNamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectNamesResponse) ProtoMessage() {}

func (x *GetProjectNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectNamesResponse.ProtoReflect.Descriptor instead.
func (*GetProjectNamesResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{15}
}

func (x *GetProjectNamesResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetProjectNamesResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetProjectNamesResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

// request parameters for method get_project_by_name
type GetProjectByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// entity name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetProjectByNameRequest) Reset() {
	*x = GetProjectByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectByNameRequest) ProtoMessage() {}

func (x *GetProjectByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectByNameRequest.ProtoReflect.Descriptor instead.
func (*GetProjectByNameRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{16}
}

func (x *GetProjectByNameRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetProjectByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// response parameters for method get_project_by_name
type GetProjectByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// project object
	Project *Project `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *GetProjectByNameResponse) Reset() {
	*x = GetProjectByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectByNameResponse) ProtoMessage() {}

func (x *GetProjectByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectByNameResponse.ProtoReflect.Descriptor instead.
func (*GetProjectByNameResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{17}
}

func (x *GetProjectByNameResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetProjectByNameResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetProjectByNameResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

// request parameters for method get_project_by_id
type GetProjectByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// project identifier
	ProjectId int64 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *GetProjectByIdRequest) Reset() {
	*x = GetProjectByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectByIdRequest) ProtoMessage() {}

func (x *GetProjectByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectByIdRequest.ProtoReflect.Descriptor instead.
func (*GetProjectByIdRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{18}
}

func (x *GetProjectByIdRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetProjectByIdRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

// response parameters for method get_project_by_id
type GetProjectByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// project object
	Project *Project `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *GetProjectByIdResponse) Reset() {
	*x = GetProjectByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectByIdResponse) ProtoMessage() {}

func (x *GetProjectByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectByIdResponse.ProtoReflect.Descriptor instead.
func (*GetProjectByIdResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{19}
}

func (x *GetProjectByIdResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetProjectByIdResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetProjectByIdResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

// request parameters for method get_project_wrapper_by_name
type GetProjectWrapperByNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// entity name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetProjectWrapperByNameRequest) Reset() {
	*x = GetProjectWrapperByNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectWrapperByNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectWrapperByNameRequest) ProtoMessage() {}

func (x *GetProjectWrapperByNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectWrapperByNameRequest.ProtoReflect.Descriptor instead.
func (*GetProjectWrapperByNameRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{20}
}

func (x *GetProjectWrapperByNameRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetProjectWrapperByNameRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// response parameters for method get_project_wrapper_by_name
type GetProjectWrapperByNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// project object with associations
	ProjectWrapper *ProjectWrapper `protobuf:"bytes,3,opt,name=project_wrapper,json=projectWrapper,proto3" json:"project_wrapper,omitempty"`
}

func (x *GetProjectWrapperByNameResponse) Reset() {
	*x = GetProjectWrapperByNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectWrapperByNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectWrapperByNameResponse) ProtoMessage() {}

func (x *GetProjectWrapperByNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectWrapperByNameResponse.ProtoReflect.Descriptor instead.
func (*GetProjectWrapperByNameResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{21}
}

func (x *GetProjectWrapperByNameResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetProjectWrapperByNameResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetProjectWrapperByNameResponse) GetProjectWrapper() *ProjectWrapper {
	if x != nil {
		return x.ProjectWrapper
	}
	return nil
}

// request parameters for method get_project_wrapper_by_id
type GetProjectWrapperByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// project identifier
	ProjectId int64 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *GetProjectWrapperByIdRequest) Reset() {
	*x = GetProjectWrapperByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectWrapperByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectWrapperByIdRequest) ProtoMessage() {}

func (x *GetProjectWrapperByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectWrapperByIdRequest.ProtoReflect.Descriptor instead.
func (*GetProjectWrapperByIdRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{22}
}

func (x *GetProjectWrapperByIdRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetProjectWrapperByIdRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

// response parameters for method get_project_wrapper_by_id
type GetProjectWrapperByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// project object with associations
	ProjectWrapper *ProjectWrapper `protobuf:"bytes,3,opt,name=project_wrapper,json=projectWrapper,proto3" json:"project_wrapper,omitempty"`
}

func (x *GetProjectWrapperByIdResponse) Reset() {
	*x = GetProjectWrapperByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectWrapperByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectWrapperByIdResponse) ProtoMessage() {}

func (x *GetProjectWrapperByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectWrapperByIdResponse.ProtoReflect.Descriptor instead.
func (*GetProjectWrapperByIdResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{23}
}

func (x *GetProjectWrapperByIdResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetProjectWrapperByIdResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetProjectWrapperByIdResponse) GetProjectWrapper() *ProjectWrapper {
	if x != nil {
		return x.ProjectWrapper
	}
	return nil
}

// request parameters for method create_status_type
type CreateStatusTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// status identifier
	StatusId int32 `protobuf:"varint,2,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
	// status name
	StatusName string `protobuf:"bytes,3,opt,name=status_name,json=statusName,proto3" json:"status_name,omitempty"`
	// entity description
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateStatusTypeRequest) Reset() {
	*x = CreateStatusTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStatusTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStatusTypeRequest) ProtoMessage() {}

func (x *CreateStatusTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStatusTypeRequest.ProtoReflect.Descriptor instead.
func (*CreateStatusTypeRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{24}
}

func (x *CreateStatusTypeRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *CreateStatusTypeRequest) GetStatusId() int32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *CreateStatusTypeRequest) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

func (x *CreateStatusTypeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// response parameters for method create_status_type
type CreateStatusTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *CreateStatusTypeResponse) Reset() {
	*x = CreateStatusTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateStatusTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateStatusTypeResponse) ProtoMessage() {}

func (x *CreateStatusTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateStatusTypeResponse.ProtoReflect.Descriptor instead.
func (*CreateStatusTypeResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{25}
}

func (x *CreateStatusTypeResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CreateStatusTypeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateStatusTypeResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method update_status_type
type UpdateStatusTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// status identifier
	StatusId int32 `protobuf:"varint,2,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// status name
	StatusName string `protobuf:"bytes,4,opt,name=status_name,json=statusName,proto3" json:"status_name,omitempty"`
	// entity description
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateStatusTypeRequest) Reset() {
	*x = UpdateStatusTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusTypeRequest) ProtoMessage() {}

func (x *UpdateStatusTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusTypeRequest.ProtoReflect.Descriptor instead.
func (*UpdateStatusTypeRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateStatusTypeRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *UpdateStatusTypeRequest) GetStatusId() int32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *UpdateStatusTypeRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateStatusTypeRequest) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

func (x *UpdateStatusTypeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// response parameters for method update_status_type
type UpdateStatusTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateStatusTypeResponse) Reset() {
	*x = UpdateStatusTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateStatusTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusTypeResponse) ProtoMessage() {}

func (x *UpdateStatusTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusTypeResponse.ProtoReflect.Descriptor instead.
func (*UpdateStatusTypeResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateStatusTypeResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpdateStatusTypeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UpdateStatusTypeResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method delete_status_type
type DeleteStatusTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// status identifier
	StatusId int32 `protobuf:"varint,2,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteStatusTypeRequest) Reset() {
	*x = DeleteStatusTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStatusTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStatusTypeRequest) ProtoMessage() {}

func (x *DeleteStatusTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStatusTypeRequest.ProtoReflect.Descriptor instead.
func (*DeleteStatusTypeRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{28}
}

func (x *DeleteStatusTypeRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *DeleteStatusTypeRequest) GetStatusId() int32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *DeleteStatusTypeRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// response parameters for method delete_status_type
type DeleteStatusTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteStatusTypeResponse) Reset() {
	*x = DeleteStatusTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteStatusTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStatusTypeResponse) ProtoMessage() {}

func (x *DeleteStatusTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStatusTypeResponse.ProtoReflect.Descriptor instead.
func (*DeleteStatusTypeResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{29}
}

func (x *DeleteStatusTypeResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *DeleteStatusTypeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DeleteStatusTypeResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method get_status_type
type GetStatusTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// status identifier
	StatusId int32 `protobuf:"varint,2,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
}

func (x *GetStatusTypeRequest) Reset() {
	*x = GetStatusTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusTypeRequest) ProtoMessage() {}

func (x *GetStatusTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusTypeRequest.ProtoReflect.Descriptor instead.
func (*GetStatusTypeRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{30}
}

func (x *GetStatusTypeRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetStatusTypeRequest) GetStatusId() int32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

// response parameters for method get_status_type
type GetStatusTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// status type object
	StatusType *StatusType `protobuf:"bytes,3,opt,name=status_type,json=statusType,proto3" json:"status_type,omitempty"`
}

func (x *GetStatusTypeResponse) Reset() {
	*x = GetStatusTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusTypeResponse) ProtoMessage() {}

func (x *GetStatusTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusTypeResponse.ProtoReflect.Descriptor instead.
func (*GetStatusTypeResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{31}
}

func (x *GetStatusTypeResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetStatusTypeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetStatusTypeResponse) GetStatusType() *StatusType {
	if x != nil {
		return x.StatusType
	}
	return nil
}

// request parameters for method get_status_types
type GetStatusTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
}

func (x *GetStatusTypesRequest) Reset() {
	*x = GetStatusTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusTypesRequest) ProtoMessage() {}

func (x *GetStatusTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusTypesRequest.ProtoReflect.Descriptor instead.
func (*GetStatusTypesRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{32}
}

func (x *GetStatusTypesRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

// response parameters for method get_status_types
type GetStatusTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// list of status type objects
	StatusTypes []*StatusType `protobuf:"bytes,3,rep,name=status_types,json=statusTypes,proto3" json:"status_types,omitempty"`
}

func (x *GetStatusTypesResponse) Reset() {
	*x = GetStatusTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStatusTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatusTypesResponse) ProtoMessage() {}

func (x *GetStatusTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatusTypesResponse.ProtoReflect.Descriptor instead.
func (*GetStatusTypesResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{33}
}

func (x *GetStatusTypesResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetStatusTypesResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetStatusTypesResponse) GetStatusTypes() []*StatusType {
	if x != nil {
		return x.StatusTypes
	}
	return nil
}

// request parameters for method create_task
type CreateTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// project identifier
	ProjectId int64 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// entity name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// entity description
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// status identifier
	StatusId int32 `protobuf:"varint,5,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
	// project start date
	StartDate *dml.DateTime `protobuf:"bytes,6,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	// project end date
	EndDate *dml.DateTime `protobuf:"bytes,7,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	// task priority, 0 low to 9 high
	Priority int32 `protobuf:"varint,8,opt,name=priority,proto3" json:"priority,omitempty"`
	// parent task id
	ParentId int64 `protobuf:"varint,9,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// sibling position
	Position int32 `protobuf:"varint,10,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *CreateTaskRequest) Reset() {
	*x = CreateTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskRequest) ProtoMessage() {}

func (x *CreateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{34}
}

func (x *CreateTaskRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *CreateTaskRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *CreateTaskRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTaskRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateTaskRequest) GetStatusId() int32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *CreateTaskRequest) GetStartDate() *dml.DateTime {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *CreateTaskRequest) GetEndDate() *dml.DateTime {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *CreateTaskRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *CreateTaskRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *CreateTaskRequest) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

// response parameters for method create_task
type CreateTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// task identifier
	TaskId int64 `protobuf:"varint,4,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *CreateTaskResponse) Reset() {
	*x = CreateTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskResponse) ProtoMessage() {}

func (x *CreateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{35}
}

func (x *CreateTaskResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CreateTaskResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateTaskResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CreateTaskResponse) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

// request parameters for method update_task
type UpdateTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// task identifier
	TaskId int64 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// entity name
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// entity description
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// status identifier
	StatusId int32 `protobuf:"varint,6,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
	// project start date
	StartDate *dml.DateTime `protobuf:"bytes,7,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	// project end date
	EndDate *dml.DateTime `protobuf:"bytes,8,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	// task priority, 0 low to 9 high
	Priority int32 `protobuf:"varint,9,opt,name=priority,proto3" json:"priority,omitempty"`
	// parent task id
	ParentId int64 `protobuf:"varint,10,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// sibling position
	Position int32 `protobuf:"varint,11,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *UpdateTaskRequest) Reset() {
	*x = UpdateTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskRequest) ProtoMessage() {}

func (x *UpdateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateTaskRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *UpdateTaskRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *UpdateTaskRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateTaskRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTaskRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateTaskRequest) GetStatusId() int32 {
	if x != nil {
		return x.StatusId
	}
	return 0
}

func (x *UpdateTaskRequest) GetStartDate() *dml.DateTime {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *UpdateTaskRequest) GetEndDate() *dml.DateTime {
	if x != nil {
		return x.EndDate
	}
	return nil
}

func (x *UpdateTaskRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *UpdateTaskRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *UpdateTaskRequest) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

// response parameters for method update_task
type UpdateTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateTaskResponse) Reset() {
	*x = UpdateTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskResponse) ProtoMessage() {}

func (x *UpdateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskResponse.ProtoReflect.Descriptor instead.
func (*UpdateTaskResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateTaskResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpdateTaskResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UpdateTaskResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method delete_task
type DeleteTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// task identifier
	TaskId int64 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteTaskRequest) Reset() {
	*x = DeleteTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskRequest) ProtoMessage() {}

func (x *DeleteTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskRequest.ProtoReflect.Descriptor instead.
func (*DeleteTaskRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{38}
}

func (x *DeleteTaskRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *DeleteTaskRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *DeleteTaskRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// response parameters for method delete_task
type DeleteTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteTaskResponse) Reset() {
	*x = DeleteTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskResponse) ProtoMessage() {}

func (x *DeleteTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskResponse.ProtoReflect.Descriptor instead.
func (*DeleteTaskResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{39}
}

func (x *DeleteTaskResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *DeleteTaskResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DeleteTaskResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method get_task_by_id
type GetTaskByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// task identifier
	TaskId int64 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *GetTaskByIdRequest) Reset() {
	*x = GetTaskByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskByIdRequest) ProtoMessage() {}

func (x *GetTaskByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskByIdRequest.ProtoReflect.Descriptor instead.
func (*GetTaskByIdRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{40}
}

func (x *GetTaskByIdRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetTaskByIdRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

// response parameters for method get_task_by_id
type GetTaskByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// project task object
	Task *Task `protobuf:"bytes,3,opt,name=task,proto3" json:"task,omitempty"`
}

func (x *GetTaskByIdResponse) Reset() {
	*x = GetTaskByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskByIdResponse) ProtoMessage() {}

func (x *GetTaskByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskByIdResponse.ProtoReflect.Descriptor instead.
func (*GetTaskByIdResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{41}
}

func (x *GetTaskByIdResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetTaskByIdResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetTaskByIdResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

// request parameters for method get_task_wrapper_by_id
type GetTaskWrapperByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// task identifier
	TaskId int64 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *GetTaskWrapperByIdRequest) Reset() {
	*x = GetTaskWrapperByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskWrapperByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskWrapperByIdRequest) ProtoMessage() {}

func (x *GetTaskWrapperByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskWrapperByIdRequest.ProtoReflect.Descriptor instead.
func (*GetTaskWrapperByIdRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{42}
}

func (x *GetTaskWrapperByIdRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetTaskWrapperByIdRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

// response parameters for method get_task_wrapper_by_id
type GetTaskWrapperByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// project task object with associations
	TaskWrapper *TaskWrapper `protobuf:"bytes,3,opt,name=task_wrapper,json=taskWrapper,proto3" json:"task_wrapper,omitempty"`
}

func (x *GetTaskWrapperByIdResponse) Reset() {
	*x = GetTaskWrapperByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskWrapperByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskWrapperByIdResponse) ProtoMessage() {}

func (x *GetTaskWrapperByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskWrapperByIdResponse.ProtoReflect.Descriptor instead.
func (*GetTaskWrapperByIdResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{43}
}

func (x *GetTaskWrapperByIdResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetTaskWrapperByIdResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetTaskWrapperByIdResponse) GetTaskWrapper() *TaskWrapper {
	if x != nil {
		return x.TaskWrapper
	}
	return nil
}

// request parameters for method reorder_child_tasks
type ReorderChildTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// task identifier
	TaskId int64 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// list of child task identifiers
	ChildTaskIds []int64 `protobuf:"varint,4,rep,packed,name=child_task_ids,json=childTaskIds,proto3" json:"child_task_ids,omitempty"`
}

func (x *ReorderChildTasksRequest) Reset() {
	*x = ReorderChildTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReorderChildTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReorderChildTasksRequest) ProtoMessage() {}

func (x *ReorderChildTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReorderChildTasksRequest.ProtoReflect.Descriptor instead.
func (*ReorderChildTasksRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{44}
}

func (x *ReorderChildTasksRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *ReorderChildTasksRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *ReorderChildTasksRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ReorderChildTasksRequest) GetChildTaskIds() []int64 {
	if x != nil {
		return x.ChildTaskIds
	}
	return nil
}

// response parameters for method reorder_child_tasks
type ReorderChildTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ReorderChildTasksResponse) Reset() {
	*x = ReorderChildTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReorderChildTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReorderChildTasksResponse) ProtoMessage() {}

func (x *ReorderChildTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReorderChildTasksResponse.ProtoReflect.Descriptor instead.
func (*ReorderChildTasksResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{45}
}

func (x *ReorderChildTasksResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *ReorderChildTasksResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ReorderChildTasksResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method get_tasks_by_project
type GetTasksByProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// project identifier
	ProjectId int64 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *GetTasksByProjectRequest) Reset() {
	*x = GetTasksByProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksByProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksByProjectRequest) ProtoMessage() {}

func (x *GetTasksByProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksByProjectRequest.ProtoReflect.Descriptor instead.
func (*GetTasksByProjectRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{46}
}

func (x *GetTasksByProjectRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetTasksByProjectRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

// response parameters for method get_tasks_by_project
type GetTasksByProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// list of project task objects
	Tasks []*Task `protobuf:"bytes,3,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *GetTasksByProjectResponse) Reset() {
	*x = GetTasksByProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTasksByProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksByProjectResponse) ProtoMessage() {}

func (x *GetTasksByProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksByProjectResponse.ProtoReflect.Descriptor instead.
func (*GetTasksByProjectResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{47}
}

func (x *GetTasksByProjectResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetTasksByProjectResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetTasksByProjectResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

// request parameters for method create_team_member
type CreateTeamMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// project identifier
	ProjectId int64 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// entity name
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// role id of this team member
	ProjectRoleId int32 `protobuf:"varint,4,opt,name=project_role_id,json=projectRoleId,proto3" json:"project_role_id,omitempty"`
	// email address of team member
	Email string `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *CreateTeamMemberRequest) Reset() {
	*x = CreateTeamMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTeamMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeamMemberRequest) ProtoMessage() {}

func (x *CreateTeamMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeamMemberRequest.ProtoReflect.Descriptor instead.
func (*CreateTeamMemberRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{48}
}

func (x *CreateTeamMemberRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *CreateTeamMemberRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *CreateTeamMemberRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTeamMemberRequest) GetProjectRoleId() int32 {
	if x != nil {
		return x.ProjectRoleId
	}
	return 0
}

func (x *CreateTeamMemberRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// response parameters for method create_team_member
type CreateTeamMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// team member id
	MemberId int64 `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
}

func (x *CreateTeamMemberResponse) Reset() {
	*x = CreateTeamMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTeamMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeamMemberResponse) ProtoMessage() {}

func (x *CreateTeamMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeamMemberResponse.ProtoReflect.Descriptor instead.
func (*CreateTeamMemberResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{49}
}

func (x *CreateTeamMemberResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CreateTeamMemberResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateTeamMemberResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *CreateTeamMemberResponse) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

// request parameters for method update_team_member
type UpdateTeamMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// team member id
	MemberId int64 `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// entity name
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// role id of this team member
	ProjectRoleId int32 `protobuf:"varint,5,opt,name=project_role_id,json=projectRoleId,proto3" json:"project_role_id,omitempty"`
	// email address of team member
	Email string `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *UpdateTeamMemberRequest) Reset() {
	*x = UpdateTeamMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamMemberRequest) ProtoMessage() {}

func (x *UpdateTeamMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamMemberRequest.ProtoReflect.Descriptor instead.
func (*UpdateTeamMemberRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{50}
}

func (x *UpdateTeamMemberRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *UpdateTeamMemberRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *UpdateTeamMemberRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateTeamMemberRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTeamMemberRequest) GetProjectRoleId() int32 {
	if x != nil {
		return x.ProjectRoleId
	}
	return 0
}

func (x *UpdateTeamMemberRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// response parameters for method update_team_member
type UpdateTeamMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateTeamMemberResponse) Reset() {
	*x = UpdateTeamMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeamMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeamMemberResponse) ProtoMessage() {}

func (x *UpdateTeamMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeamMemberResponse.ProtoReflect.Descriptor instead.
func (*UpdateTeamMemberResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{51}
}

func (x *UpdateTeamMemberResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpdateTeamMemberResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UpdateTeamMemberResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method delete_team_member
type DeleteTeamMemberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// team member id
	MemberId int64 `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteTeamMemberRequest) Reset() {
	*x = DeleteTeamMemberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTeamMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTeamMemberRequest) ProtoMessage() {}

func (x *DeleteTeamMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTeamMemberRequest.ProtoReflect.Descriptor instead.
func (*DeleteTeamMemberRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{52}
}

func (x *DeleteTeamMemberRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *DeleteTeamMemberRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *DeleteTeamMemberRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// response parameters for method delete_team_member
type DeleteTeamMemberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteTeamMemberResponse) Reset() {
	*x = DeleteTeamMemberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTeamMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTeamMemberResponse) ProtoMessage() {}

func (x *DeleteTeamMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTeamMemberResponse.ProtoReflect.Descriptor instead.
func (*DeleteTeamMemberResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{53}
}

func (x *DeleteTeamMemberResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *DeleteTeamMemberResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DeleteTeamMemberResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method get_team_member_by_id
type GetTeamMemberByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// team member id
	MemberId int64 `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
}

func (x *GetTeamMemberByIdRequest) Reset() {
	*x = GetTeamMemberByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamMemberByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamMemberByIdRequest) ProtoMessage() {}

func (x *GetTeamMemberByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamMemberByIdRequest.ProtoReflect.Descriptor instead.
func (*GetTeamMemberByIdRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{54}
}

func (x *GetTeamMemberByIdRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetTeamMemberByIdRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

// response parameters for method get_team_member_by_id
type GetTeamMemberByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// project team member object
	TeamMember *TeamMember `protobuf:"bytes,3,opt,name=team_member,json=teamMember,proto3" json:"team_member,omitempty"`
}

func (x *GetTeamMemberByIdResponse) Reset() {
	*x = GetTeamMemberByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamMemberByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamMemberByIdResponse) ProtoMessage() {}

func (x *GetTeamMemberByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamMemberByIdResponse.ProtoReflect.Descriptor instead.
func (*GetTeamMemberByIdResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{55}
}

func (x *GetTeamMemberByIdResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetTeamMemberByIdResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetTeamMemberByIdResponse) GetTeamMember() *TeamMember {
	if x != nil {
		return x.TeamMember
	}
	return nil
}

// request parameters for method get_team_member_by_project
type GetTeamMemberByProjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// project identifier
	ProjectId int64 `protobuf:"varint,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
}

func (x *GetTeamMemberByProjectRequest) Reset() {
	*x = GetTeamMemberByProjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamMemberByProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamMemberByProjectRequest) ProtoMessage() {}

func (x *GetTeamMemberByProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamMemberByProjectRequest.ProtoReflect.Descriptor instead.
func (*GetTeamMemberByProjectRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{56}
}

func (x *GetTeamMemberByProjectRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetTeamMemberByProjectRequest) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

// response parameters for method get_team_member_by_project
type GetTeamMemberByProjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// list of project team member objects
	TeamMembers []*TeamMember `protobuf:"bytes,3,rep,name=team_members,json=teamMembers,proto3" json:"team_members,omitempty"`
}

func (x *GetTeamMemberByProjectResponse) Reset() {
	*x = GetTeamMemberByProjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamMemberByProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamMemberByProjectResponse) ProtoMessage() {}

func (x *GetTeamMemberByProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamMemberByProjectResponse.ProtoReflect.Descriptor instead.
func (*GetTeamMemberByProjectResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{57}
}

func (x *GetTeamMemberByProjectResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetTeamMemberByProjectResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetTeamMemberByProjectResponse) GetTeamMembers() []*TeamMember {
	if x != nil {
		return x.TeamMembers
	}
	return nil
}

// request parameters for method get_team_member_by_task
type GetTeamMemberByTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// task identifier
	TaskId int64 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (x *GetTeamMemberByTaskRequest) Reset() {
	*x = GetTeamMemberByTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamMemberByTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamMemberByTaskRequest) ProtoMessage() {}

func (x *GetTeamMemberByTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamMemberByTaskRequest.ProtoReflect.Descriptor instead.
func (*GetTeamMemberByTaskRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{58}
}

func (x *GetTeamMemberByTaskRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetTeamMemberByTaskRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

// response parameters for method get_team_member_by_task
type GetTeamMemberByTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// list of project team member objects
	TeamMembers []*TeamMember `protobuf:"bytes,3,rep,name=team_members,json=teamMembers,proto3" json:"team_members,omitempty"`
}

func (x *GetTeamMemberByTaskResponse) Reset() {
	*x = GetTeamMemberByTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeamMemberByTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeamMemberByTaskResponse) ProtoMessage() {}

func (x *GetTeamMemberByTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeamMemberByTaskResponse.ProtoReflect.Descriptor instead.
func (*GetTeamMemberByTaskResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{59}
}

func (x *GetTeamMemberByTaskResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetTeamMemberByTaskResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetTeamMemberByTaskResponse) GetTeamMembers() []*TeamMember {
	if x != nil {
		return x.TeamMembers
	}
	return nil
}

// request parameters for method add_team_member_to_task
type AddTeamMemberToTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// task identifier
	TaskId int64 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// team member id
	MemberId int64 `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
}

func (x *AddTeamMemberToTaskRequest) Reset() {
	*x = AddTeamMemberToTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTeamMemberToTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTeamMemberToTaskRequest) ProtoMessage() {}

func (x *AddTeamMemberToTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTeamMemberToTaskRequest.ProtoReflect.Descriptor instead.
func (*AddTeamMemberToTaskRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{60}
}

func (x *AddTeamMemberToTaskRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *AddTeamMemberToTaskRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *AddTeamMemberToTaskRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

// response parameters for method add_team_member_to_task
type AddTeamMemberToTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *AddTeamMemberToTaskResponse) Reset() {
	*x = AddTeamMemberToTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTeamMemberToTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTeamMemberToTaskResponse) ProtoMessage() {}

func (x *AddTeamMemberToTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTeamMemberToTaskResponse.ProtoReflect.Descriptor instead.
func (*AddTeamMemberToTaskResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{61}
}

func (x *AddTeamMemberToTaskResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *AddTeamMemberToTaskResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// request parameters for method remove_team_member_from_task
type RemoveTeamMemberFromTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// task identifier
	TaskId int64 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// team member id
	MemberId int64 `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
}

func (x *RemoveTeamMemberFromTaskRequest) Reset() {
	*x = RemoveTeamMemberFromTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTeamMemberFromTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTeamMemberFromTaskRequest) ProtoMessage() {}

func (x *RemoveTeamMemberFromTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTeamMemberFromTaskRequest.ProtoReflect.Descriptor instead.
func (*RemoveTeamMemberFromTaskRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{62}
}

func (x *RemoveTeamMemberFromTaskRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *RemoveTeamMemberFromTaskRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *RemoveTeamMemberFromTaskRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

// response parameters for method remove_team_member_from_task
type RemoveTeamMemberFromTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
}

func (x *RemoveTeamMemberFromTaskResponse) Reset() {
	*x = RemoveTeamMemberFromTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTeamMemberFromTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTeamMemberFromTaskResponse) ProtoMessage() {}

func (x *RemoveTeamMemberFromTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTeamMemberFromTaskResponse.ProtoReflect.Descriptor instead.
func (*RemoveTeamMemberFromTaskResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{63}
}

func (x *RemoveTeamMemberFromTaskResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *RemoveTeamMemberFromTaskResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// request parameters for method add_task_hours
type AddTaskHoursRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// task identifier
	TaskId int64 `protobuf:"varint,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// team member id
	MemberId int64 `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	// hours allocated to task by team member
	TaskHours *dml.Decimal `protobuf:"bytes,4,opt,name=task_hours,json=taskHours,proto3" json:"task_hours,omitempty"`
}

func (x *AddTaskHoursRequest) Reset() {
	*x = AddTaskHoursRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTaskHoursRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTaskHoursRequest) ProtoMessage() {}

func (x *AddTaskHoursRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTaskHoursRequest.ProtoReflect.Descriptor instead.
func (*AddTaskHoursRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{64}
}

func (x *AddTaskHoursRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *AddTaskHoursRequest) GetTaskId() int64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *AddTaskHoursRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AddTaskHoursRequest) GetTaskHours() *dml.Decimal {
	if x != nil {
		return x.TaskHours
	}
	return nil
}

// response parameters for method add_task_hours
type AddTaskHoursResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// hours allocated to task by team member
	TaskHours *dml.Decimal `protobuf:"bytes,3,opt,name=task_hours,json=taskHours,proto3" json:"task_hours,omitempty"`
}

func (x *AddTaskHoursResponse) Reset() {
	*x = AddTaskHoursResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTaskHoursResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTaskHoursResponse) ProtoMessage() {}

func (x *AddTaskHoursResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTaskHoursResponse.ProtoReflect.Descriptor instead.
func (*AddTaskHoursResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{65}
}

func (x *AddTaskHoursResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *AddTaskHoursResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *AddTaskHoursResponse) GetTaskHours() *dml.Decimal {
	if x != nil {
		return x.TaskHours
	}
	return nil
}

// request parameters for method create_project_role_type
type CreateProjectRoleTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// role id of this team member
	ProjectRoleId int32 `protobuf:"varint,2,opt,name=project_role_id,json=projectRoleId,proto3" json:"project_role_id,omitempty"`
	// role name of this team member
	RoleName string `protobuf:"bytes,3,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	// entity description
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateProjectRoleTypeRequest) Reset() {
	*x = CreateProjectRoleTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectRoleTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectRoleTypeRequest) ProtoMessage() {}

func (x *CreateProjectRoleTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectRoleTypeRequest.ProtoReflect.Descriptor instead.
func (*CreateProjectRoleTypeRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{66}
}

func (x *CreateProjectRoleTypeRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *CreateProjectRoleTypeRequest) GetProjectRoleId() int32 {
	if x != nil {
		return x.ProjectRoleId
	}
	return 0
}

func (x *CreateProjectRoleTypeRequest) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *CreateProjectRoleTypeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// response parameters for method create_project_role_type
type CreateProjectRoleTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *CreateProjectRoleTypeResponse) Reset() {
	*x = CreateProjectRoleTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProjectRoleTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectRoleTypeResponse) ProtoMessage() {}

func (x *CreateProjectRoleTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectRoleTypeResponse.ProtoReflect.Descriptor instead.
func (*CreateProjectRoleTypeResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{67}
}

func (x *CreateProjectRoleTypeResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *CreateProjectRoleTypeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *CreateProjectRoleTypeResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method update_project_role_type
type UpdateProjectRoleTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// role id of this team member
	ProjectRoleId int32 `protobuf:"varint,2,opt,name=project_role_id,json=projectRoleId,proto3" json:"project_role_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	// role name of this team member
	RoleName string `protobuf:"bytes,4,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	// entity description
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateProjectRoleTypeRequest) Reset() {
	*x = UpdateProjectRoleTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectRoleTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectRoleTypeRequest) ProtoMessage() {}

func (x *UpdateProjectRoleTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectRoleTypeRequest.ProtoReflect.Descriptor instead.
func (*UpdateProjectRoleTypeRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{68}
}

func (x *UpdateProjectRoleTypeRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *UpdateProjectRoleTypeRequest) GetProjectRoleId() int32 {
	if x != nil {
		return x.ProjectRoleId
	}
	return 0
}

func (x *UpdateProjectRoleTypeRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UpdateProjectRoleTypeRequest) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *UpdateProjectRoleTypeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// response parameters for method update_project_role_type
type UpdateProjectRoleTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *UpdateProjectRoleTypeResponse) Reset() {
	*x = UpdateProjectRoleTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProjectRoleTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectRoleTypeResponse) ProtoMessage() {}

func (x *UpdateProjectRoleTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectRoleTypeResponse.ProtoReflect.Descriptor instead.
func (*UpdateProjectRoleTypeResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{69}
}

func (x *UpdateProjectRoleTypeResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *UpdateProjectRoleTypeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UpdateProjectRoleTypeResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method delete_project_role_type
type DeleteProjectRoleTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// role id of this team member
	ProjectRoleId int32 `protobuf:"varint,2,opt,name=project_role_id,json=projectRoleId,proto3" json:"project_role_id,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteProjectRoleTypeRequest) Reset() {
	*x = DeleteProjectRoleTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjectRoleTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectRoleTypeRequest) ProtoMessage() {}

func (x *DeleteProjectRoleTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectRoleTypeRequest.ProtoReflect.Descriptor instead.
func (*DeleteProjectRoleTypeRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{70}
}

func (x *DeleteProjectRoleTypeRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *DeleteProjectRoleTypeRequest) GetProjectRoleId() int32 {
	if x != nil {
		return x.ProjectRoleId
	}
	return 0
}

func (x *DeleteProjectRoleTypeRequest) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// response parameters for method delete_project_role_type
type DeleteProjectRoleTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version of this record
	Version int32 `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *DeleteProjectRoleTypeResponse) Reset() {
	*x = DeleteProjectRoleTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProjectRoleTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectRoleTypeResponse) ProtoMessage() {}

func (x *DeleteProjectRoleTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectRoleTypeResponse.ProtoReflect.Descriptor instead.
func (*DeleteProjectRoleTypeResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{71}
}

func (x *DeleteProjectRoleTypeResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *DeleteProjectRoleTypeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *DeleteProjectRoleTypeResponse) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

// request parameters for method get_project_role_type
type GetProjectRoleTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
	// role id of this team member
	ProjectRoleId int32 `protobuf:"varint,2,opt,name=project_role_id,json=projectRoleId,proto3" json:"project_role_id,omitempty"`
}

func (x *GetProjectRoleTypeRequest) Reset() {
	*x = GetProjectRoleTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectRoleTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectRoleTypeRequest) ProtoMessage() {}

func (x *GetProjectRoleTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectRoleTypeRequest.ProtoReflect.Descriptor instead.
func (*GetProjectRoleTypeRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{72}
}

func (x *GetProjectRoleTypeRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

func (x *GetProjectRoleTypeRequest) GetProjectRoleId() int32 {
	if x != nil {
		return x.ProjectRoleId
	}
	return 0
}

// response parameters for method get_project_role_type
type GetProjectRoleTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// project role type object
	RoleType *ProjectRoleType `protobuf:"bytes,3,opt,name=role_type,json=roleType,proto3" json:"role_type,omitempty"`
}

func (x *GetProjectRoleTypeResponse) Reset() {
	*x = GetProjectRoleTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectRoleTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectRoleTypeResponse) ProtoMessage() {}

func (x *GetProjectRoleTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectRoleTypeResponse.ProtoReflect.Descriptor instead.
func (*GetProjectRoleTypeResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{73}
}

func (x *GetProjectRoleTypeResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetProjectRoleTypeResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetProjectRoleTypeResponse) GetRoleType() *ProjectRoleType {
	if x != nil {
		return x.RoleType
	}
	return nil
}

// request parameters for method get_project_role_types
type GetProjectRoleTypesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mservice account id
	MserviceId int64 `protobuf:"varint,1,opt,name=mservice_id,json=mserviceId,proto3" json:"mservice_id,omitempty"`
}

func (x *GetProjectRoleTypesRequest) Reset() {
	*x = GetProjectRoleTypesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectRoleTypesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectRoleTypesRequest) ProtoMessage() {}

func (x *GetProjectRoleTypesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectRoleTypesRequest.ProtoReflect.Descriptor instead.
func (*GetProjectRoleTypesRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{74}
}

func (x *GetProjectRoleTypesRequest) GetMserviceId() int64 {
	if x != nil {
		return x.MserviceId
	}
	return 0
}

// response parameters for method get_project_role_types
type GetProjectRoleTypesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// list of project role type objects
	RoleTypes []*ProjectRoleType `protobuf:"bytes,3,rep,name=role_types,json=roleTypes,proto3" json:"role_types,omitempty"`
}

func (x *GetProjectRoleTypesResponse) Reset() {
	*x = GetProjectRoleTypesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectRoleTypesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectRoleTypesResponse) ProtoMessage() {}

func (x *GetProjectRoleTypesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectRoleTypesResponse.ProtoReflect.Descriptor instead.
func (*GetProjectRoleTypesResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{75}
}

func (x *GetProjectRoleTypesResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetProjectRoleTypesResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetProjectRoleTypesResponse) GetRoleTypes() []*ProjectRoleType {
	if x != nil {
		return x.RoleTypes
	}
	return nil
}

// request parameters for method get_server_version
type GetServerVersionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// placeholder param to avoid empty message
	DummyParam int32 `protobuf:"varint,1,opt,name=dummy_param,json=dummyParam,proto3" json:"dummy_param,omitempty"`
}

func (x *GetServerVersionRequest) Reset() {
	*x = GetServerVersionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerVersionRequest) ProtoMessage() {}

func (x *GetServerVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerVersionRequest.ProtoReflect.Descriptor instead.
func (*GetServerVersionRequest) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{76}
}

func (x *GetServerVersionRequest) GetDummyParam() int32 {
	if x != nil {
		return x.DummyParam
	}
	return 0
}

// response parameters for method get_server_version
type GetServerVersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// method result code
	ErrorCode int32 `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// text error message
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// version level of server
	ServerVersion string `protobuf:"bytes,3,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
	// server uptime in seconds
	ServerUptime int64 `protobuf:"varint,4,opt,name=server_uptime,json=serverUptime,proto3" json:"server_uptime,omitempty"`
}

func (x *GetServerVersionResponse) Reset() {
	*x = GetServerVersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_MServiceProject_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerVersionResponse) ProtoMessage() {}

func (x *GetServerVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_MServiceProject_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerVersionResponse.ProtoReflect.Descriptor instead.
func (*GetServerVersionResponse) Descriptor() ([]byte, []int) {
	return file_MServiceProject_proto_rawDescGZIP(), []int{77}
}

func (x *GetServerVersionResponse) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *GetServerVersionResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GetServerVersionResponse) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

func (x *GetServerVersionResponse) GetServerUptime() int64 {
	if x != nil {
		return x.ServerUptime
	}
	return 0
}

var File_MServiceProject_proto protoreflect.FileDescriptor

var file_MServiceProject_proto_rawDesc = []byte{
	0x0a, 0x15, 0x4d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1d, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x12, 0x44, 0x6d, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcb, 0x03, 0x0a, 0x07, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x29,
	0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c,
	0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2c, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28,
	0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0xfc, 0x04, 0x0a, 0x0e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d,
	0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x27,
	0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x4c, 0x0a,
	0x0c, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x0e, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b,
	0x74, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x12, 0x5a, 0x0a, 0x13, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x57, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x52, 0x11, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x57,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x22, 0xc3, 0x02, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x08,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb6, 0x04,
	0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12,
	0x27, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c,
	0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe7, 0x05, 0x0a, 0x0b, 0x54, 0x61, 0x73, 0x6b, 0x57,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12,
	0x27, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c,
	0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0c, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x54, 0x65, 0x61,
	0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b, 0x74, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x73, 0x12, 0x5a, 0x0a, 0x13, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x11, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73,
	0x22, 0xbb, 0x03, 0x0a, 0x0a, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x12, 0x27, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x2b, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x22, 0xcf,
	0x02, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x6f,
	0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d,
	0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x27,
	0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xcd, 0x02, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x6f, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x29, 0x0a, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x08, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x07, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d,
	0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x68, 0x6f, 0x75, 0x72,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x48, 0x6f, 0x75, 0x72, 0x73,
	0x22, 0xe2, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x2c, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x65, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x9b, 0x02, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x28, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x75, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x70, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x75, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x39, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x4e, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x57, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x55, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xbd,
	0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x56, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x22, 0x5e,
	0x0a, 0x1c, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xbb,
	0x01, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x56, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x0e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x22, 0x9a, 0x01, 0x0a,
	0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0xb4, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x18, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x71, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x22, 0x54, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x38, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xaa, 0x01, 0x0a, 0x16,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x22, 0xd3, 0x02, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x28, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69,
	0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x8b,
	0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0xe7, 0x02, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x64, 0x6d, 0x6c, 0x2e,
	0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x72, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x67, 0x0a, 0x11, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x72, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x55, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x22, 0xaf, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x57,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4d, 0x0a, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x77,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x52, 0x0b, 0x74, 0x61, 0x73, 0x6b, 0x57, 0x72,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x22, 0x94, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f,
	0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x73, 0x22, 0x79, 0x0a, 0x19,
	0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x54, 0x61, 0x73, 0x6b,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x5a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x42, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x22, 0xab, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x95,
	0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc3, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x78, 0x0a, 0x18,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x71, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x78, 0x0a, 0x18, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x58, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0xab, 0x01,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x4a, 0x0a, 0x0b, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52,
	0x0a, 0x74, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x5f, 0x0a, 0x1d, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0xb2, 0x01, 0x0a,
	0x1e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b, 0x74, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x73, 0x22, 0x56, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x42, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x22, 0xaf, 0x01, 0x0a, 0x1b, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4c, 0x0a,
	0x0c, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0b,
	0x74, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x22, 0x73, 0x0a, 0x1a, 0x41,
	0x64, 0x64, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x6f, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73,
	0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x61, 0x0a, 0x1b, 0x41, 0x64, 0x64, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x54, 0x6f, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x78, 0x0a, 0x1f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x61,
	0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x66, 0x0a,
	0x20, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73,
	0x6b, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x74, 0x61, 0x73, 0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x68, 0x6f, 0x75,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x22, 0x87, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x48, 0x6f, 0x75,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b,
	0x0a, 0x0a, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x64, 0x6d, 0x6c, 0x2e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x1c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7d, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0xc0, 0x01, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7d, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x81, 0x01, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x7d, 0x0a, 0x1d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x64, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xad,
	0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x4b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3d,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xb0, 0x01,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x4d, 0x0a, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x22, 0x3a, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x75, 0x6d, 0x6d, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x64, 0x75, 0x6d, 0x6d, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x22, 0xaa, 0x01, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x75,
	0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x55, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x32, 0xd9, 0x25, 0x0a, 0x0f, 0x4d, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x7b, 0x0a,
	0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x33, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x0e, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x33, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7b, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x33, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x35, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x13, 0x67, 0x65,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x62, 0x79, 0x5f, 0x69, 0x64, 0x12, 0x34, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x1b, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57,
	0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x96, 0x01, 0x0a, 0x19, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f,
	0x69, 0x64, 0x12, 0x3b, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x72, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3c, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85, 0x01,
	0x0a, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x12, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x36, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85, 0x01,
	0x0a, 0x12, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x0f, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x33, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x10, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x34, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x61, 0x73, 0x6b, 0x12, 0x30, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x30, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x0b,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x30, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x77, 0x0a, 0x0e, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x62, 0x79, 0x5f,
	0x69, 0x64, 0x12, 0x31, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x16, 0x67, 0x65,
	0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x62,
	0x79, 0x5f, 0x69, 0x64, 0x12, 0x38, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x57, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x57, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x13, 0x72, 0x65,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x12, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x73, 0x5f, 0x62, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x37, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x42,
	0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x85, 0x01, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d,
	0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x12, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x85, 0x01, 0x0a, 0x12, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d,
	0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8a, 0x01, 0x0a, 0x15, 0x67, 0x65, 0x74,
	0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f,
	0x69, 0x64, 0x12, 0x37, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x1a, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x65,
	0x61, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x12, 0x3c, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x42, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x42, 0x79, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x90, 0x01, 0x0a, 0x17, 0x67, 0x65, 0x74, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x39, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x6d,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x42, 0x79, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x90, 0x01, 0x0a, 0x17, 0x61, 0x64, 0x64, 0x5f, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x5f, 0x74, 0x61, 0x73, 0x6b,
	0x12, 0x39, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x54, 0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x6f,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x54,
	0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x54, 0x6f, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x9f, 0x01, 0x0a, 0x1c, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x3e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54,
	0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67,
	0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54,
	0x65, 0x61, 0x6d, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x79, 0x0a, 0x0e, 0x61, 0x64, 0x64,
	0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x32, 0x2e, 0x6f, 0x72,
	0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x54,
	0x61, 0x73, 0x6b, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x33, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e,
	0x41, 0x64, 0x64, 0x54, 0x61, 0x73, 0x6b, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x95, 0x01, 0x0a, 0x18, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x3b, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x95, 0x01, 0x0a,
	0x18, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f,
	0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x95, 0x01, 0x0a, 0x18, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x3b, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8c, 0x01, 0x0a,
	0x15, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x38, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x39, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e,
	0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8f, 0x01, 0x0a, 0x16,
	0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x6f, 0x6c, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x39, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65,
	0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x85, 0x01,
	0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72,
	0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2e, 0x6d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x44, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x72, 0x61, 0x63, 0x65, 0x2f, 0x6d, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0xaa, 0x02, 0x0f, 0x4d, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_MServiceProject_proto_rawDescOnce sync.Once
	file_MServiceProject_proto_rawDescData = file_MServiceProject_proto_rawDesc
)

func file_MServiceProject_proto_rawDescGZIP() []byte {
	file_MServiceProject_proto_rawDescOnce.Do(func() {
		file_MServiceProject_proto_rawDescData = protoimpl.X.CompressGZIP(file_MServiceProject_proto_rawDescData)
	})
	return file_MServiceProject_proto_rawDescData
}

var file_MServiceProject_proto_msgTypes = make([]protoimpl.MessageInfo, 78)
var file_MServiceProject_proto_goTypes = []interface{}{
	(*Project)(nil),                          // 0: org.gaterace.mservice.project.Project
	(*ProjectWrapper)(nil),                   // 1: org.gaterace.mservice.project.ProjectWrapper
	(*StatusType)(nil),                       // 2: org.gaterace.mservice.project.StatusType
	(*Task)(nil),                             // 3: org.gaterace.mservice.project.Task
	(*TaskWrapper)(nil),                      // 4: org.gaterace.mservice.project.TaskWrapper
	(*TeamMember)(nil),                       // 5: org.gaterace.mservice.project.TeamMember
	(*ProjectRoleType)(nil),                  // 6: org.gaterace.mservice.project.ProjectRoleType
	(*TaskToMember)(nil),                     // 7: org.gaterace.mservice.project.TaskToMember
	(*CreateProjectRequest)(nil),             // 8: org.gaterace.mservice.project.CreateProjectRequest
	(*CreateProjectResponse)(nil),            // 9: org.gaterace.mservice.project.CreateProjectResponse
	(*UpdateProjectRequest)(nil),             // 10: org.gaterace.mservice.project.UpdateProjectRequest
	(*UpdateProjectResponse)(nil),            // 11: org.gaterace.mservice.project.UpdateProjectResponse
	(*DeleteProjectRequest)(nil),             // 12: org.gaterace.mservice.project.DeleteProjectRequest
	(*DeleteProjectResponse)(nil),            // 13: org.gaterace.mservice.project.DeleteProjectResponse
	(*GetProjectNamesRequest)(nil),           // 14: org.gaterace.mservice.project.GetProjectNamesRequest
	(*GetProjectNamesResponse)(nil),          // 15: org.gaterace.mservice.project.GetProjectNamesResponse
	(*GetProjectByNameRequest)(nil),          // 16: org.gaterace.mservice.project.GetProjectByNameRequest
	(*GetProjectByNameResponse)(nil),         // 17: org.gaterace.mservice.project.GetProjectByNameResponse
	(*GetProjectByIdRequest)(nil),            // 18: org.gaterace.mservice.project.GetProjectByIdRequest
	(*GetProjectByIdResponse)(nil),           // 19: org.gaterace.mservice.project.GetProjectByIdResponse
	(*GetProjectWrapperByNameRequest)(nil),   // 20: org.gaterace.mservice.project.GetProjectWrapperByNameRequest
	(*GetProjectWrapperByNameResponse)(nil),  // 21: org.gaterace.mservice.project.GetProjectWrapperByNameResponse
	(*GetProjectWrapperByIdRequest)(nil),     // 22: org.gaterace.mservice.project.GetProjectWrapperByIdRequest
	(*GetProjectWrapperByIdResponse)(nil),    // 23: org.gaterace.mservice.project.GetProjectWrapperByIdResponse
	(*CreateStatusTypeRequest)(nil),          // 24: org.gaterace.mservice.project.CreateStatusTypeRequest
	(*CreateStatusTypeResponse)(nil),         // 25: org.gaterace.mservice.project.CreateStatusTypeResponse
	(*UpdateStatusTypeRequest)(nil),          // 26: org.gaterace.mservice.project.UpdateStatusTypeRequest
	(*UpdateStatusTypeResponse)(nil),         // 27: org.gaterace.mservice.project.UpdateStatusTypeResponse
	(*DeleteStatusTypeRequest)(nil),          // 28: org.gaterace.mservice.project.DeleteStatusTypeRequest
	(*DeleteStatusTypeResponse)(nil),         // 29: org.gaterace.mservice.project.DeleteStatusTypeResponse
	(*GetStatusTypeRequest)(nil),             // 30: org.gaterace.mservice.project.GetStatusTypeRequest
	(*GetStatusTypeResponse)(nil),            // 31: org.gaterace.mservice.project.GetStatusTypeResponse
	(*GetStatusTypesRequest)(nil),            // 32: org.gaterace.mservice.project.GetStatusTypesRequest
	(*GetStatusTypesResponse)(nil),           // 33: org.gaterace.mservice.project.GetStatusTypesResponse
	(*CreateTaskRequest)(nil),                // 34: org.gaterace.mservice.project.CreateTaskRequest
	(*CreateTaskResponse)(nil),               // 35: org.gaterace.mservice.project.CreateTaskResponse
	(*UpdateTaskRequest)(nil),                // 36: org.gaterace.mservice.project.UpdateTaskRequest
	(*UpdateTaskResponse)(nil),               // 37: org.gaterace.mservice.project.UpdateTaskResponse
	(*DeleteTaskRequest)(nil),                // 38: org.gaterace.mservice.project.DeleteTaskRequest
	(*DeleteTaskResponse)(nil),               // 39: org.gaterace.mservice.project.DeleteTaskResponse
	(*GetTaskByIdRequest)(nil),               // 40: org.gaterace.mservice.project.GetTaskByIdRequest
	(*GetTaskByIdResponse)(nil),              // 41: org.gaterace.mservice.project.GetTaskByIdResponse
	(*GetTaskWrapperByIdRequest)(nil),        // 42: org.gaterace.mservice.project.GetTaskWrapperByIdRequest
	(*GetTaskWrapperByIdResponse)(nil),       // 43: org.gaterace.mservice.project.GetTaskWrapperByIdResponse
	(*ReorderChildTasksRequest)(nil),         // 44: org.gaterace.mservice.project.ReorderChildTasksRequest
	(*ReorderChildTasksResponse)(nil),        // 45: org.gaterace.mservice.project.ReorderChildTasksResponse
	(*GetTasksByProjectRequest)(nil),         // 46: org.gaterace.mservice.project.GetTasksByProjectRequest
	(*GetTasksByProjectResponse)(nil),        // 47: org.gaterace.mservice.project.GetTasksByProjectResponse
	(*CreateTeamMemberRequest)(nil),          // 48: org.gaterace.mservice.project.CreateTeamMemberRequest
	(*CreateTeamMemberResponse)(nil),         // 49: org.gaterace.mservice.project.CreateTeamMemberResponse
	(*UpdateTeamMemberRequest)(nil),          // 50: org.gaterace.mservice.project.UpdateTeamMemberRequest
	(*UpdateTeamMemberResponse)(nil),         // 51: org.gaterace.mservice.project.UpdateTeamMemberResponse
	(*DeleteTeamMemberRequest)(nil),          // 52: org.gaterace.mservice.project.DeleteTeamMemberRequest
	(*DeleteTeamMemberResponse)(nil),         // 53: org.gaterace.mservice.project.DeleteTeamMemberResponse
	(*GetTeamMemberByIdRequest)(nil),         // 54: org.gaterace.mservice.project.GetTeamMemberByIdRequest
	(*GetTeamMemberByIdResponse)(nil),        // 55: org.gaterace.mservice.project.GetTeamMemberByIdResponse
	(*GetTeamMemberByProjectRequest)(nil),    // 56: org.gaterace.mservice.project.GetTeamMemberByProjectRequest
	(*GetTeamMemberByProjectResponse)(nil),   // 57: org.gaterace.mservice.project.GetTeamMemberByProjectResponse
	(*GetTeamMemberByTaskRequest)(nil),       // 58: org.gaterace.mservice.project.GetTeamMemberByTaskRequest
	(*GetTeamMemberByTaskResponse)(nil),      // 59: org.gaterace.mservice.project.GetTeamMemberByTaskResponse
	(*AddTeamMemberToTaskRequest)(nil),       // 60: org.gaterace.mservice.project.AddTeamMemberToTaskRequest
	(*AddTeamMemberToTaskResponse)(nil),      // 61: org.gaterace.mservice.project.AddTeamMemberToTaskResponse
	(*RemoveTeamMemberFromTaskRequest)(nil),  // 62: org.gaterace.mservice.project.RemoveTeamMemberFromTaskRequest
	(*RemoveTeamMemberFromTaskResponse)(nil), // 63: org.gaterace.mservice.project.RemoveTeamMemberFromTaskResponse
	(*AddTaskHoursRequest)(nil),              // 64: org.gaterace.mservice.project.AddTaskHoursRequest
	(*AddTaskHoursResponse)(nil),             // 65: org.gaterace.mservice.project.AddTaskHoursResponse
	(*CreateProjectRoleTypeRequest)(nil),     // 66: org.gaterace.mservice.project.CreateProjectRoleTypeRequest
	(*CreateProjectRoleTypeResponse)(nil),    // 67: org.gaterace.mservice.project.CreateProjectRoleTypeResponse
	(*UpdateProjectRoleTypeRequest)(nil),     // 68: org.gaterace.mservice.project.UpdateProjectRoleTypeRequest
	(*UpdateProjectRoleTypeResponse)(nil),    // 69: org.gaterace.mservice.project.UpdateProjectRoleTypeResponse
	(*DeleteProjectRoleTypeRequest)(nil),     // 70: org.gaterace.mservice.project.DeleteProjectRoleTypeRequest
	(*DeleteProjectRoleTypeResponse)(nil),    // 71: org.gaterace.mservice.project.DeleteProjectRoleTypeResponse
	(*GetProjectRoleTypeRequest)(nil),        // 72: org.gaterace.mservice.project.GetProjectRoleTypeRequest
	(*GetProjectRoleTypeResponse)(nil),       // 73: org.gaterace.mservice.project.GetProjectRoleTypeResponse
	(*GetProjectRoleTypesRequest)(nil),       // 74: org.gaterace.mservice.project.GetProjectRoleTypesRequest
	(*GetProjectRoleTypesResponse)(nil),      // 75: org.gaterace.mservice.project.GetProjectRoleTypesResponse
	(*GetServerVersionRequest)(nil),          // 76: org.gaterace.mservice.project.GetServerVersionRequest
	(*GetServerVersionResponse)(nil),         // 77: org.gaterace.mservice.project.GetServerVersionResponse
	(*dml.DateTime)(nil),                     // 78: dml.DateTime
	(*dml.Decimal)(nil),                      // 79: dml.Decimal
}
var file_MServiceProject_proto_depIdxs = []int32{
	78, // 0: org.gaterace.mservice.project.Project.created:type_name -> dml.DateTime
	78, // 1: org.gaterace.mservice.project.Project.modified:type_name -> dml.DateTime
	78, // 2: org.gaterace.mservice.project.Project.deleted:type_name -> dml.DateTime
	78, // 3: org.gaterace.mservice.project.Project.start_date:type_name -> dml.DateTime
	78, // 4: org.gaterace.mservice.project.Project.end_date:type_name -> dml.DateTime
	78, // 5: org.gaterace.mservice.project.ProjectWrapper.created:type_name -> dml.DateTime
	78, // 6: org.gaterace.mservice.project.ProjectWrapper.modified:type_name -> dml.DateTime
	78, // 7: org.gaterace.mservice.project.ProjectWrapper.deleted:type_name -> dml.DateTime
	78, // 8: org.gaterace.mservice.project.ProjectWrapper.start_date:type_name -> dml.DateTime
	78, // 9: org.gaterace.mservice.project.ProjectWrapper.end_date:type_name -> dml.DateTime
	5,  // 10: org.gaterace.mservice.project.ProjectWrapper.team_members:type_name -> org.gaterace.mservice.project.TeamMember
	4,  // 11: org.gaterace.mservice.project.ProjectWrapper.child_task_wrappers:type_name -> org.gaterace.mservice.project.TaskWrapper
	78, // 12: org.gaterace.mservice.project.StatusType.created:type_name -> dml.DateTime
	78, // 13: org.gaterace.mservice.project.StatusType.modified:type_name -> dml.DateTime
	78, // 14: org.gaterace.mservice.project.StatusType.deleted:type_name -> dml.DateTime
	78, // 15: org.gaterace.mservice.project.Task.created:type_name -> dml.DateTime
	78, // 16: org.gaterace.mservice.project.Task.modified:type_name -> dml.DateTime
	78, // 17: org.gaterace.mservice.project.Task.deleted:type_name -> dml.DateTime
	78, // 18: org.gaterace.mservice.project.Task.start_date:type_name -> dml.DateTime
	78, // 19: org.gaterace.mservice.project.Task.end_date:type_name -> dml.DateTime
	78, // 20: org.gaterace.mservice.project.TaskWrapper.created:type_name -> dml.DateTime
	78, // 21: org.gaterace.mservice.project.TaskWrapper.modified:type_name -> dml.DateTime
	78, // 22: org.gaterace.mservice.project.TaskWrapper.deleted:type_name -> dml.DateTime
	78, // 23: org.gaterace.mservice.project.TaskWrapper.start_date:type_name -> dml.DateTime
	78, // 24: org.gaterace.mservice.project.TaskWrapper.end_date:type_name -> dml.DateTime
	5,  // 25: org.gaterace.mservice.project.TaskWrapper.team_members:type_name -> org.gaterace.mservice.project.TeamMember
	4,  // 26: org.gaterace.mservice.project.TaskWrapper.child_task_wrappers:type_name -> org.gaterace.mservice.project.TaskWrapper
	78, // 27: org.gaterace.mservice.project.TeamMember.created:type_name -> dml.DateTime
	78, // 28: org.gaterace.mservice.project.TeamMember.modified:type_name -> dml.DateTime
	78, // 29: org.gaterace.mservice.project.TeamMember.deleted:type_name -> dml.DateTime
	79, // 30: org.gaterace.mservice.project.TeamMember.task_hours:type_name -> dml.Decimal
	78, // 31: org.gaterace.mservice.project.ProjectRoleType.created:type_name -> dml.DateTime
	78, // 32: org.gaterace.mservice.project.ProjectRoleType.modified:type_name -> dml.DateTime
	78, // 33: org.gaterace.mservice.project.ProjectRoleType.deleted:type_name -> dml.DateTime
	78, // 34: org.gaterace.mservice.project.TaskToMember.created:type_name -> dml.DateTime
	78, // 35: org.gaterace.mservice.project.TaskToMember.modified:type_name -> dml.DateTime
	78, // 36: org.gaterace.mservice.project.TaskToMember.deleted:type_name -> dml.DateTime
	79, // 37: org.gaterace.mservice.project.TaskToMember.task_hours:type_name -> dml.Decimal
	78, // 38: org.gaterace.mservice.project.CreateProjectRequest.start_date:type_name -> dml.DateTime
	78, // 39: org.gaterace.mservice.project.CreateProjectRequest.end_date:type_name -> dml.DateTime
	78, // 40: org.gaterace.mservice.project.UpdateProjectRequest.start_date:type_name -> dml.DateTime
	78, // 41: org.gaterace.mservice.project.UpdateProjectRequest.end_date:type_name -> dml.DateTime
	0,  // 42: org.gaterace.mservice.project.GetProjectByNameResponse.project:type_name -> org.gaterace.mservice.project.Project
	0,  // 43: org.gaterace.mservice.project.GetProjectByIdResponse.project:type_name -> org.gaterace.mservice.project.Project
	1,  // 44: org.gaterace.mservice.project.GetProjectWrapperByNameResponse.project_wrapper:type_name -> org.gaterace.mservice.project.ProjectWrapper
	1,  // 45: org.gaterace.mservice.project.GetProjectWrapperByIdResponse.project_wrapper:type_name -> org.gaterace.mservice.project.ProjectWrapper
	2,  // 46: org.gaterace.mservice.project.GetStatusTypeResponse.status_type:type_name -> org.gaterace.mservice.project.StatusType
	2,  // 47: org.gaterace.mservice.project.GetStatusTypesResponse.status_types:type_name -> org.gaterace.mservice.project.StatusType
	78, // 48: org.gaterace.mservice.project.CreateTaskRequest.start_date:type_name -> dml.DateTime
	78, // 49: org.gaterace.mservice.project.CreateTaskRequest.end_date:type_name -> dml.DateTime
	78, // 50: org.gaterace.mservice.project.UpdateTaskRequest.start_date:type_name -> dml.DateTime
	78, // 51: org.gaterace.mservice.project.UpdateTaskRequest.end_date:type_name -> dml.DateTime
	3,  // 52: org.gaterace.mservice.project.GetTaskByIdResponse.task:type_name -> org.gaterace.mservice.project.Task
	4,  // 53: org.gaterace.mservice.project.GetTaskWrapperByIdResponse.task_wrapper:type_name -> org.gaterace.mservice.project.TaskWrapper
	3,  // 54: org.gaterace.mservice.project.GetTasksByProjectResponse.tasks:type_name -> org.gaterace.mservice.project.Task
	5,  // 55: org.gaterace.mservice.project.GetTeamMemberByIdResponse.team_member:type_name -> org.gaterace.mservice.project.TeamMember
	5,  // 56: org.gaterace.mservice.project.GetTeamMemberByProjectResponse.team_members:type_name -> org.gaterace.mservice.project.TeamMember
	5,  // 57: org.gaterace.mservice.project.GetTeamMemberByTaskResponse.team_members:type_name -> org.gaterace.mservice.project.TeamMember
	79, // 58: org.gaterace.mservice.project.AddTaskHoursRequest.task_hours:type_name -> dml.Decimal
	79, // 59: org.gaterace.mservice.project.AddTaskHoursResponse.task_hours:type_name -> dml.Decimal
	6,  // 60: org.gaterace.mservice.project.GetProjectRoleTypeResponse.role_type:type_name -> org.gaterace.mservice.project.ProjectRoleType
	6,  // 61: org.gaterace.mservice.project.GetProjectRoleTypesResponse.role_types:type_name -> org.gaterace.mservice.project.ProjectRoleType
	8,  // 62: org.gaterace.mservice.project.MServiceProject.create_project:input_type -> org.gaterace.mservice.project.CreateProjectRequest
	10, // 63: org.gaterace.mservice.project.MServiceProject.update_project:input_type -> org.gaterace.mservice.project.UpdateProjectRequest
	12, // 64: org.gaterace.mservice.project.MServiceProject.delete_project:input_type -> org.gaterace.mservice.project.DeleteProjectRequest
	14, // 65: org.gaterace.mservice.project.MServiceProject.get_project_names:input_type -> org.gaterace.mservice.project.GetProjectNamesRequest
	16, // 66: org.gaterace.mservice.project.MServiceProject.get_project_by_name:input_type -> org.gaterace.mservice.project.GetProjectByNameRequest
	18, // 67: org.gaterace.mservice.project.MServiceProject.get_project_by_id:input_type -> org.gaterace.mservice.project.GetProjectByIdRequest
	20, // 68: org.gaterace.mservice.project.MServiceProject.get_project_wrapper_by_name:input_type -> org.gaterace.mservice.project.GetProjectWrapperByNameRequest
	22, // 69: org.gaterace.mservice.project.MServiceProject.get_project_wrapper_by_id:input_type -> org.gaterace.mservice.project.GetProjectWrapperByIdRequest
	24, // 70: org.gaterace.mservice.project.MServiceProject.create_status_type:input_type -> org.gaterace.mservice.project.CreateStatusTypeRequest
	26, // 71: org.gaterace.mservice.project.MServiceProject.update_status_type:input_type -> org.gaterace.mservice.project.UpdateStatusTypeRequest
	28, // 72: org.gaterace.mservice.project.MServiceProject.delete_status_type:input_type -> org.gaterace.mservice.project.DeleteStatusTypeRequest
	30, // 73: org.gaterace.mservice.project.MServiceProject.get_status_type:input_type -> org.gaterace.mservice.project.GetStatusTypeRequest
	32, // 74: org.gaterace.mservice.project.MServiceProject.get_status_types:input_type -> org.gaterace.mservice.project.GetStatusTypesRequest
	34, // 75: org.gaterace.mservice.project.MServiceProject.create_task:input_type -> org.gaterace.mservice.project.CreateTaskRequest
	36, // 76: org.gaterace.mservice.project.MServiceProject.update_task:input_type -> org.gaterace.mservice.project.UpdateTaskRequest
	38, // 77: org.gaterace.mservice.project.MServiceProject.delete_task:input_type -> org.gaterace.mservice.project.DeleteTaskRequest
	40, // 78: org.gaterace.mservice.project.MServiceProject.get_task_by_id:input_type -> org.gaterace.mservice.project.GetTaskByIdRequest
	42, // 79: org.gaterace.mservice.project.MServiceProject.get_task_wrapper_by_id:input_type -> org.gaterace.mservice.project.GetTaskWrapperByIdRequest
	44, // 80: org.gaterace.mservice.project.MServiceProject.reorder_child_tasks:input_type -> org.gaterace.mservice.project.ReorderChildTasksRequest
	46, // 81: org.gaterace.mservice.project.MServiceProject.get_tasks_by_project:input_type -> org.gaterace.mservice.project.GetTasksByProjectRequest
	48, // 82: org.gaterace.mservice.project.MServiceProject.create_team_member:input_type -> org.gaterace.mservice.project.CreateTeamMemberRequest
	50, // 83: org.gaterace.mservice.project.MServiceProject.update_team_member:input_type -> org.gaterace.mservice.project.UpdateTeamMemberRequest
	52, // 84: org.gaterace.mservice.project.MServiceProject.delete_team_member:input_type -> org.gaterace.mservice.project.DeleteTeamMemberRequest
	54, // 85: org.gaterace.mservice.project.MServiceProject.get_team_member_by_id:input_type -> org.gaterace.mservice.project.GetTeamMemberByIdRequest
	56, // 86: org.gaterace.mservice.project.MServiceProject.get_team_member_by_project:input_type -> org.gaterace.mservice.project.GetTeamMemberByProjectRequest
	58, // 87: org.gaterace.mservice.project.MServiceProject.get_team_member_by_task:input_type -> org.gaterace.mservice.project.GetTeamMemberByTaskRequest
	60, // 88: org.gaterace.mservice.project.MServiceProject.add_team_member_to_task:input_type -> org.gaterace.mservice.project.AddTeamMemberToTaskRequest
	62, // 89: org.gaterace.mservice.project.MServiceProject.remove_team_member_from_task:input_type -> org.gaterace.mservice.project.RemoveTeamMemberFromTaskRequest
	64, // 90: org.gaterace.mservice.project.MServiceProject.add_task_hours:input_type -> org.gaterace.mservice.project.AddTaskHoursRequest
	66, // 91: org.gaterace.mservice.project.MServiceProject.create_project_role_type:input_type -> org.gaterace.mservice.project.CreateProjectRoleTypeRequest
	68, // 92: org.gaterace.mservice.project.MServiceProject.update_project_role_type:input_type -> org.gaterace.mservice.project.UpdateProjectRoleTypeRequest
	70, // 93: org.gaterace.mservice.project.MServiceProject.delete_project_role_type:input_type -> org.gaterace.mservice.project.DeleteProjectRoleTypeRequest
	72, // 94: org.gaterace.mservice.project.MServiceProject.get_project_role_type:input_type -> org.gaterace.mservice.project.GetProjectRoleTypeRequest
	74, // 95: org.gaterace.mservice.project.MServiceProject.get_project_role_types:input_type -> org.gaterace.mservice.project.GetProjectRoleTypesRequest
	76, // 96: org.gaterace.mservice.project.MServiceProject.get_server_version:input_type -> org.gaterace.mservice.project.GetServerVersionRequest
	9,  // 97: org.gaterace.mservice.project.MServiceProject.create_project:output_type -> org.gaterace.mservice.project.CreateProjectResponse
	11, // 98: org.gaterace.mservice.project.MServiceProject.update_project:output_type -> org.gaterace.mservice.project.UpdateProjectResponse
	13, // 99: org.gaterace.mservice.project.MServiceProject.delete_project:output_type -> org.gaterace.mservice.project.DeleteProjectResponse
	15, // 100: org.gaterace.mservice.project.MServiceProject.get_project_names:output_type -> org.gaterace.mservice.project.GetProjectNamesResponse
	17, // 101: org.gaterace.mservice.project.MServiceProject.get_project_by_name:output_type -> org.gaterace.mservice.project.GetProjectByNameResponse
	19, // 102: org.gaterace.mservice.project.MServiceProject.get_project_by_id:output_type -> org.gaterace.mservice.project.GetProjectByIdResponse
	21, // 103: org.gaterace.mservice.project.MServiceProject.get_project_wrapper_by_name:output_type -> org.gaterace.mservice.project.GetProjectWrapperByNameResponse
	23, // 104: org.gaterace.mservice.project.MServiceProject.get_project_wrapper_by_id:output_type -> org.gaterace.mservice.project.GetProjectWrapperByIdResponse
	25, // 105: org.gaterace.mservice.project.MServiceProject.create_status_type:output_type -> org.gaterace.mservice.project.CreateStatusTypeResponse
	27, // 106: org.gaterace.mservice.project.MServiceProject.update_status_type:output_type -> org.gaterace.mservice.project.UpdateStatusTypeResponse
	29, // 107: org.gaterace.mservice.project.MServiceProject.delete_status_type:output_type -> org.gaterace.mservice.project.DeleteStatusTypeResponse
	31, // 108: org.gaterace.mservice.project.MServiceProject.get_status_type:output_type -> org.gaterace.mservice.project.GetStatusTypeResponse
	33, // 109: org.gaterace.mservice.project.MServiceProject.get_status_types:output_type -> org.gaterace.mservice.project.GetStatusTypesResponse
	35, // 110: org.gaterace.mservice.project.MServiceProject.create_task:output_type -> org.gaterace.mservice.project.CreateTaskResponse
	37, // 111: org.gaterace.mservice.project.MServiceProject.update_task:output_type -> org.gaterace.mservice.project.UpdateTaskResponse
	39, // 112: org.gaterace.mservice.project.MServiceProject.delete_task:output_type -> org.gaterace.mservice.project.DeleteTaskResponse
	41, // 113: org.gaterace.mservice.project.MServiceProject.get_task_by_id:output_type -> org.gaterace.mservice.project.GetTaskByIdResponse
	43, // 114: org.gaterace.mservice.project.MServiceProject.get_task_wrapper_by_id:output_type -> org.gaterace.mservice.project.GetTaskWrapperByIdResponse
	45, // 115: org.gaterace.mservice.project.MServiceProject.reorder_child_tasks:output_type -> org.gaterace.mservice.project.ReorderChildTasksResponse
	47, // 116: org.gaterace.mservice.project.MServiceProject.get_tasks_by_project:output_type -> org.gaterace.mservice.project.GetTasksByProjectResponse
	49, // 117: org.gaterace.mservice.project.MServiceProject.create_team_member:output_type -> org.gaterace.mservice.project.CreateTeamMemberResponse
	51, // 118: org.gaterace.mservice.project.MServiceProject.update_team_member:output_type -> org.gaterace.mservice.project.UpdateTeamMemberResponse
	53, // 119: org.gaterace.mservice.project.MServiceProject.delete_team_member:output_type -> org.gaterace.mservice.project.DeleteTeamMemberResponse
	55, // 120: org.gaterace.mservice.project.MServiceProject.get_team_member_by_id:output_type -> org.gaterace.mservice.project.GetTeamMemberByIdResponse
	57, // 121: org.gaterace.mservice.project.MServiceProject.get_team_member_by_project:output_type -> org.gaterace.mservice.project.GetTeamMemberByProjectResponse
	59, // 122: org.gaterace.mservice.project.MServiceProject.get_team_member_by_task:output_type -> org.gaterace.mservice.project.GetTeamMemberByTaskResponse
	61, // 123: org.gaterace.mservice.project.MServiceProject.add_team_member_to_task:output_type -> org.gaterace.mservice.project.AddTeamMemberToTaskResponse
	63, // 124: org.gaterace.mservice.project.MServiceProject.remove_team_member_from_task:output_type -> org.gaterace.mservice.project.RemoveTeamMemberFromTaskResponse
	65, // 125: org.gaterace.mservice.project.MServiceProject.add_task_hours:output_type -> org.gaterace.mservice.project.AddTaskHoursResponse
	67, // 126: org.gaterace.mservice.project.MServiceProject.create_project_role_type:output_type -> org.gaterace.mservice.project.CreateProjectRoleTypeResponse
	69, // 127: org.gaterace.mservice.project.MServiceProject.update_project_role_type:output_type -> org.gaterace.mservice.project.UpdateProjectRoleTypeResponse
	71, // 128: org.gaterace.mservice.project.MServiceProject.delete_project_role_type:output_type -> org.gaterace.mservice.project.DeleteProjectRoleTypeResponse
	73, // 129: org.gaterace.mservice.project.MServiceProject.get_project_role_type:output_type -> org.gaterace.mservice.project.GetProjectRoleTypeResponse
	75, // 130: org.gaterace.mservice.project.MServiceProject.get_project_role_types:output_type -> org.gaterace.mservice.project.GetProjectRoleTypesResponse
	77, // 131: org.gaterace.mservice.project.MServiceProject.get_server_version:output_type -> org.gaterace.mservice.project.GetServerVersionResponse
	97, // [97:132] is the sub-list for method output_type
	62, // [62:97] is the sub-list for method input_type
	62, // [62:62] is the sub-list for extension type_name
	62, // [62:62] is the sub-list for extension extendee
	0,  // [0:62] is the sub-list for field type_name
}

func init() { file_MServiceProject_proto_init() }
func file_MServiceProject_proto_init() {
	if File_MServiceProject_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_MServiceProject_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeamMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectRoleType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskToMember); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectNamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectNamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectWrapperByNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectWrapperByNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectWrapperByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectWrapperByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStatusTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateStatusTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateStatusTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStatusTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteStatusTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStatusTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskWrapperByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskWrapperByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReorderChildTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReorderChildTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksByProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTasksByProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTeamMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTeamMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeamMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeamMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTeamMemberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTeamMemberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamMemberByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamMemberByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamMemberByProjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamMemberByProjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamMemberByTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeamMemberByTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTeamMemberToTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTeamMemberToTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTeamMemberFromTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTeamMemberFromTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTaskHoursRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTaskHoursResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectRoleTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProjectRoleTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectRoleTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProjectRoleTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProjectRoleTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProjectRoleTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectRoleTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectRoleTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectRoleTypesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectRoleTypesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerVersionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_MServiceProject_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerVersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_MServiceProject_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   78,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_MServiceProject_proto_goTypes,
		DependencyIndexes: file_MServiceProject_proto_depIdxs,
		MessageInfos:      file_MServiceProject_proto_msgTypes,
	}.Build()
	File_MServiceProject_proto = out.File
	file_MServiceProject_proto_rawDesc = nil
	file_MServiceProject_proto_goTypes = nil
	file_MServiceProject_proto_depIdxs = nil
}
